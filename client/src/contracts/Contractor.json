{
  "contractName": "Contractor",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "ContractFormed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "remainingBalance",
          "type": "uint256"
        }
      ],
      "name": "TransferredToAccount",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "createNewWork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractFormed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingBalance\",\"type\":\"uint256\"}],\"name\":\"TransferredToAccount\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createNewWork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol\":\"Contractor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol\":{\"keccak256\":\"0xa2a4c8eab0eb0edd42ed08119cf503a04a1ad9314bb7883fa790a205db879dd0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://51a699b9d52c1ba93fd8e66b6ae05d510f39785088c6eddf6bff7552554cceac\",\"dweb:/ipfs/QmVm93w8MK1Utu7ZV2RY6Kpj3yj1SAPpAcrxQcVPyDsLzo\"]},\"/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Work.sol\":{\"keccak256\":\"0x4bc74a1a16b3ce6312a256daf27edbaf68c3ae8bd38e949ba3ed7e7fbc2b0be8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5b78d4600df685fea1f080ad69865caacd2535db3a75d931b078f565c93200cb\",\"dweb:/ipfs/QmViYXSr5x2tLyB6NCCUXB5F2s3AZTNmWMpjZ4prMGCBwe\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610812806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063704319c91461003b5780638da5cb5b14610045575b600080fd5b610043610063565b005b61004d6100d5565b60405161005a9190610124565b60405180910390f35b600030604051610072906100f9565b61007c919061013f565b604051809103906000f080158015610098573d6000803e3d6000fd5b5090507f4761a9db7d11eeb66b70d289d12c6dfff48a69c7d31929640997afec7ab3ca80816040516100ca9190610124565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61062c806101b183390190565b61010f8161015a565b82525050565b61011e8161018c565b82525050565b60006020820190506101396000830184610106565b92915050565b60006020820190506101546000830184610115565b92915050565b60006101658261016c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101978261019e565b9050919050565b60006101a98261016c565b905091905056fe608060405234801561001057600080fd5b5060405161062c38038061062c8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b61050c806101206000396000f3fe6080604052600436106100385760003560e01c8063548769211461005d5780638da5cb5b14610086578063ed01bf29146100b157610058565b3661005857346001600082825461004f91906103ec565b92505081905550005b600080fd5b34801561006957600080fd5b50610084600480360381019061007f9190610275565b6100dc565b005b34801561009257600080fd5b5061009b610236565b6040516100a8919061033c565b60405180910390f35b3480156100bd57600080fd5b506100c661025a565b6040516100d39190610397565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016190610357565b60405180910390fd5b478111156101ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a490610377565b60405180910390fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156101f8573d6000803e3d6000fd5b507f4d5cad599e80b97037bd6cd2da9cd361fc74837cdb6ec7aa1cea6f81a8273282824760405161022a9291906103b2565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008135905061026f816104bf565b92915050565b60006020828403121561028757600080fd5b600061029584828501610260565b91505092915050565b6102a78161046c565b82525050565b60006102ba6015836103db565b91507f596f7520617265206e6f7420746865206f776e657200000000000000000000006000830152602082019050919050565b60006102fa601e836103db565b91507f496e73756666696369656e742066756e647320696e20636f6e747261637400006000830152602082019050919050565b61033681610462565b82525050565b6000602082019050610351600083018461029e565b92915050565b60006020820190508181036000830152610370816102ad565b9050919050565b60006020820190508181036000830152610390816102ed565b9050919050565b60006020820190506103ac600083018461032d565b92915050565b60006040820190506103c7600083018561032d565b6103d4602083018461032d565b9392505050565b600082825260208201905092915050565b60006103f782610462565b915061040283610462565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561043757610436610490565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104778261047e565b9050919050565b600061048982610442565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6104c881610462565b81146104d357600080fd5b5056fea2646970667358221220f8145464aa5831c0ab3356a54e606c2bf5acce80b8676c3aa3efab5c8510832064736f6c63430008000033a2646970667358221220a121c5dee15707577412ff7baef55795f2a777b009695c608ba6c2e3a8a61d2264736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063704319c91461003b5780638da5cb5b14610045575b600080fd5b610043610063565b005b61004d6100d5565b60405161005a9190610124565b60405180910390f35b600030604051610072906100f9565b61007c919061013f565b604051809103906000f080158015610098573d6000803e3d6000fd5b5090507f4761a9db7d11eeb66b70d289d12c6dfff48a69c7d31929640997afec7ab3ca80816040516100ca9190610124565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61062c806101b183390190565b61010f8161015a565b82525050565b61011e8161018c565b82525050565b60006020820190506101396000830184610106565b92915050565b60006020820190506101546000830184610115565b92915050565b60006101658261016c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101978261019e565b9050919050565b60006101a98261016c565b905091905056fe608060405234801561001057600080fd5b5060405161062c38038061062c8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b61050c806101206000396000f3fe6080604052600436106100385760003560e01c8063548769211461005d5780638da5cb5b14610086578063ed01bf29146100b157610058565b3661005857346001600082825461004f91906103ec565b92505081905550005b600080fd5b34801561006957600080fd5b50610084600480360381019061007f9190610275565b6100dc565b005b34801561009257600080fd5b5061009b610236565b6040516100a8919061033c565b60405180910390f35b3480156100bd57600080fd5b506100c661025a565b6040516100d39190610397565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016190610357565b60405180910390fd5b478111156101ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a490610377565b60405180910390fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156101f8573d6000803e3d6000fd5b507f4d5cad599e80b97037bd6cd2da9cd361fc74837cdb6ec7aa1cea6f81a8273282824760405161022a9291906103b2565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008135905061026f816104bf565b92915050565b60006020828403121561028757600080fd5b600061029584828501610260565b91505092915050565b6102a78161046c565b82525050565b60006102ba6015836103db565b91507f596f7520617265206e6f7420746865206f776e657200000000000000000000006000830152602082019050919050565b60006102fa601e836103db565b91507f496e73756666696369656e742066756e647320696e20636f6e747261637400006000830152602082019050919050565b61033681610462565b82525050565b6000602082019050610351600083018461029e565b92915050565b60006020820190508181036000830152610370816102ad565b9050919050565b60006020820190508181036000830152610390816102ed565b9050919050565b60006020820190506103ac600083018461032d565b92915050565b60006040820190506103c7600083018561032d565b6103d4602083018461032d565b9392505050565b600082825260208201905092915050565b60006103f782610462565b915061040283610462565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561043757610436610490565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104778261047e565b9050919050565b600061048982610442565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6104c881610462565b81146104d357600080fd5b5056fea2646970667358221220f8145464aa5831c0ab3356a54e606c2bf5acce80b8676c3aa3efab5c8510832064736f6c63430008000033a2646970667358221220a121c5dee15707577412ff7baef55795f2a777b009695c608ba6c2e3a8a61d2264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1325:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:8",
                "type": ""
              }
            ],
            "src": "7:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "213:83:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "230:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "283:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Contractor_$50_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "235:47:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:54:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "223:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:67:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "223:67:8"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Contractor_$50_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "201:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "208:3:8",
                "type": ""
              }
            ],
            "src": "131:165:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "400:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "410:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "433:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "418:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "418:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "410:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "490:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "503:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "514:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "499:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "499:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "446:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "446:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "372:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "384:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "395:4:8",
                "type": ""
              }
            ],
            "src": "302:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "645:141:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "655:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "667:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "678:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "663:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "663:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "655:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "752:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "765:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "776:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "761:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "761:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Contractor_$50_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "691:60:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "691:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "691:88:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Contractor_$50__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "617:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "629:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "640:4:8",
                "type": ""
              }
            ],
            "src": "530:256:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "837:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "847:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "876:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "858:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "858:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "847:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "819:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "829:7:8",
                "type": ""
              }
            ],
            "src": "792:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "939:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "949:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "964:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "971:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "960:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "960:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "949:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "921:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "931:7:8",
                "type": ""
              }
            ],
            "src": "894:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1103:83:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1113:67:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1174:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Contractor_$50_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1126:47:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1126:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1113:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Contractor_$50_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1083:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1093:9:8",
                "type": ""
              }
            ],
            "src": "1026:160:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1269:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1279:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1310:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1292:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1292:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1279:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Contractor_$50_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1249:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1259:9:8",
                "type": ""
              }
            ],
            "src": "1192:130:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Contractor_$50_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Contractor_$50_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Contractor_$50__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Contractor_$50_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_Contractor_$50_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Contractor_$50_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Contractor_$50_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "85:800:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "85:800:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:112;;;:::i;:::-;;111:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:112;489:6;507:4;498:14;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;489:23;;527:26;550:1;527:26;;;;;;:::i;:::-;;;;;;;;448:112;:::o;111:20::-;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:118:8:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:165::-;235:54;283:5;235:54;:::i;:::-;230:3;223:67;213:83;;:::o;302:222::-;;433:2;422:9;418:18;410:26;;446:71;514:1;503:9;499:17;490:6;446:71;:::i;:::-;400:124;;;;:::o;530:256::-;;678:2;667:9;663:18;655:26;;691:88;776:1;765:9;761:17;752:6;691:88;:::i;:::-;645:141;;;;:::o;792:96::-;;858:24;876:5;858:24;:::i;:::-;847:35;;837:51;;;:::o;894:126::-;;971:42;964:5;960:54;949:65;;939:81;;;:::o;1026:160::-;;1126:54;1174:5;1126:54;:::i;:::-;1113:67;;1103:83;;;:::o;1192:130::-;;1292:24;1310:5;1292:24;:::i;:::-;1279:37;;1269:53;;;:::o",
  "source": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"./Work.sol\";\n\ncontract Contractor{\n\n    address public owner;\n\n    // constructor(address _owner){\n    //     owner = _owner;\n    // }\n\n    modifier onlyOwner() {\n        require(msg.sender == address(owner), \"You are not the owner\");\n        _;\n    }\n\n    event TransferredToAccount(uint amount, uint remainingBalance);\n    event ContractFormed(address contractAddress);\n\n    function createNewWork() public{\n        Work w = new Work(this);\n        emit ContractFormed(address(w));\n    }\n    // function withdrawMoney(uint amount) public onlyOwner{\n    //     require(amount<=address(this).balance, \"Insufficient funds in contract\");\n    //     address payable ownerAddr = payable(msg.sender);\n    //     ownerAddr.transfer(amount);\n    //     emit TransferredToAccount(amount, address(this).balance);\n    // }\n}",
  "sourcePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol",
  "ast": {
    "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol",
    "exportedSymbols": {
      "Contractor": [
        50
      ],
      "Work": [
        500
      ]
    },
    "id": 51,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:0"
      },
      {
        "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Work.sol",
        "file": "./Work.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 51,
        "sourceUnit": 501,
        "src": "63:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          500
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 50,
        "linearizedBaseContracts": [
          50
        ],
        "name": "Contractor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 4,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 50,
            "src": "111:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "111:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "232:90:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "250:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "250:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4,
                              "src": "272:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "264:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "264:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "264:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "250:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572",
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "280:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        },
                        "value": "You are not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        }
                      ],
                      "id": 6,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "242:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "242:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "242:62:0"
                },
                {
                  "id": 17,
                  "nodeType": "PlaceholderStatement",
                  "src": "314:1:0"
                }
              ]
            },
            "id": 19,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:0"
            },
            "src": "211:111:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 25,
            "name": "TransferredToAccount",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "355:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "remainingBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "368:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "354:36:0"
            },
            "src": "328:63:0"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "ContractFormed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "417:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "416:25:0"
            },
            "src": "396:46:0"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "479:81:0",
              "statements": [
                {
                  "assignments": [
                    34
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34,
                      "mutability": "mutable",
                      "name": "w",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "489:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Work_$500",
                        "typeString": "contract Work"
                      },
                      "typeName": {
                        "id": 33,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 500,
                          "src": "489:4:0"
                        },
                        "referencedDeclaration": 500,
                        "src": "489:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$500",
                          "typeString": "contract Work"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "507:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Contractor_$50",
                          "typeString": "contract Contractor"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Contractor_$50",
                          "typeString": "contract Contractor"
                        }
                      ],
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "498:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Contractor_$50_$returns$_t_contract$_Work_$500_$",
                        "typeString": "function (contract Contractor) returns (contract Work)"
                      },
                      "typeName": {
                        "id": 36,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 500,
                          "src": "502:4:0"
                        },
                        "referencedDeclaration": 500,
                        "src": "502:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$500",
                          "typeString": "contract Work"
                        }
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Work_$500",
                      "typeString": "contract Work"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "489:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44,
                            "name": "w",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "550:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Work_$500",
                              "typeString": "contract Work"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Work_$500",
                              "typeString": "contract Work"
                            }
                          ],
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "542:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "542:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "542:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41,
                      "name": "ContractFormed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "527:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "EmitStatement",
                  "src": "522:31:0"
                }
              ]
            },
            "functionSelector": "704319c9",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:0"
            },
            "scope": 50,
            "src": "448:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 51,
        "src": "85:800:0"
      }
    ],
    "src": "38:847:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol",
    "exportedSymbols": {
      "Contractor": [
        50
      ],
      "Work": [
        500
      ]
    },
    "id": 51,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:0"
      },
      {
        "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Work.sol",
        "file": "./Work.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 51,
        "sourceUnit": 501,
        "src": "63:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          500
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 50,
        "linearizedBaseContracts": [
          50
        ],
        "name": "Contractor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 4,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 50,
            "src": "111:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "111:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "232:90:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "250:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "250:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4,
                              "src": "272:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "264:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "264:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "264:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "250:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420746865206f776e6572",
                        "id": 14,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "280:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        },
                        "value": "You are not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
                          "typeString": "literal_string \"You are not the owner\""
                        }
                      ],
                      "id": 6,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "242:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "242:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "242:62:0"
                },
                {
                  "id": 17,
                  "nodeType": "PlaceholderStatement",
                  "src": "314:1:0"
                }
              ]
            },
            "id": 19,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:0"
            },
            "src": "211:111:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 25,
            "name": "TransferredToAccount",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "355:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "remainingBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "368:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "368:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "354:36:0"
            },
            "src": "328:63:0"
          },
          {
            "anonymous": false,
            "id": 29,
            "name": "ContractFormed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "417:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "416:25:0"
            },
            "src": "396:46:0"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "479:81:0",
              "statements": [
                {
                  "assignments": [
                    34
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34,
                      "mutability": "mutable",
                      "name": "w",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "489:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Work_$500",
                        "typeString": "contract Work"
                      },
                      "typeName": {
                        "id": 33,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 32,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 500,
                          "src": "489:4:0"
                        },
                        "referencedDeclaration": 500,
                        "src": "489:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$500",
                          "typeString": "contract Work"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 38,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "507:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Contractor_$50",
                          "typeString": "contract Contractor"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Contractor_$50",
                          "typeString": "contract Contractor"
                        }
                      ],
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "498:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Contractor_$50_$returns$_t_contract$_Work_$500_$",
                        "typeString": "function (contract Contractor) returns (contract Work)"
                      },
                      "typeName": {
                        "id": 36,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 35,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 500,
                          "src": "502:4:0"
                        },
                        "referencedDeclaration": 500,
                        "src": "502:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$500",
                          "typeString": "contract Work"
                        }
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Work_$500",
                      "typeString": "contract Work"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "489:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44,
                            "name": "w",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "550:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Work_$500",
                              "typeString": "contract Work"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Work_$500",
                              "typeString": "contract Work"
                            }
                          ],
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "542:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "542:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "542:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41,
                      "name": "ContractFormed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "527:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "EmitStatement",
                  "src": "522:31:0"
                }
              ]
            },
            "functionSelector": "704319c9",
            "id": 49,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:0"
            },
            "returnParameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:0:0"
            },
            "scope": 50,
            "src": "448:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 51,
        "src": "85:800:0"
      }
    ],
    "src": "38:847:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0e098be4B0b3BE6734640B689b25727c15aF49B0",
      "transactionHash": "0x08bbe3ee4437939daae9119ff170d0b43de86f4476c2e64d4c325ae23357b63e"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-06T16:13:04.598Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
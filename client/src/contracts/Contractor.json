{
  "contractName": "Contractor",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "ContractFormed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SentToAccount",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "createNewWork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "sendToAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractFormed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SentToAccount\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"createNewWork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"sendToAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol\":\"Contractor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol\":{\"keccak256\":\"0x021bfa4498c427c6d9642933e3c491d1987b715301144fdfa4bf9600b68cecda\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e3cd8996b4e52a5dd7584be9d6d33d6cfa52457c6a88c62dd4f34bf1da354f6\",\"dweb:/ipfs/QmXE15RucGZmeZu8b87UxBZk1nnDGqKqdjRqFam7KCmceL\"]},\"/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Work.sol\":{\"keccak256\":\"0x4bc74a1a16b3ce6312a256daf27edbaf68c3ae8bd38e949ba3ed7e7fbc2b0be8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5b78d4600df685fea1f080ad69865caacd2535db3a75d931b078f565c93200cb\",\"dweb:/ipfs/QmViYXSr5x2tLyB6NCCUXB5F2s3AZTNmWMpjZ4prMGCBwe\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a84806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636310a4b91461003b578063704319c914610057575b600080fd5b610055600480360381019061005091906101f0565b610061565b005b61005f610147565b005b4782111561006e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156100b4573d6000803e3d6000fd5b50816000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461010391906102c7565b925050819055507f9432388ce97f7a9c32c9f59b80e8f02109760f1f70d7ac8380a7cfc50dce571a818360405161013b929190610283565b60405180910390a15050565b600030604051610156906101b9565b61016091906102ac565b604051809103906000f08015801561017c573d6000803e3d6000fd5b5090507f4761a9db7d11eeb66b70d289d12c6dfff48a69c7d31929640997afec7ab3ca80816040516101ae9190610268565b60405180910390a150565b61062c8061042383390190565b6000813590506101d5816103f4565b92915050565b6000813590506101ea8161040b565b92915050565b6000806040838503121561020357600080fd5b6000610211858286016101db565b9250506020610222858286016101c6565b9150509250929050565b6102358161036b565b82525050565b6102448161031d565b82525050565b6102538161037d565b82525050565b61026281610361565b82525050565b600060208201905061027d600083018461023b565b92915050565b6000604082019050610298600083018561022c565b6102a56020830184610259565b9392505050565b60006020820190506102c1600083018461024a565b92915050565b60006102d282610361565b91506102dd83610361565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610312576103116103c5565b5b828201905092915050565b600061032882610341565b9050919050565b600061033a82610341565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610376826103a1565b9050919050565b60006103888261038f565b9050919050565b600061039a82610341565b9050919050565b60006103ac826103b3565b9050919050565b60006103be82610341565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6103fd8161032f565b811461040857600080fd5b50565b61041481610361565b811461041f57600080fd5b5056fe608060405234801561001057600080fd5b5060405161062c38038061062c8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b61050c806101206000396000f3fe6080604052600436106100385760003560e01c8063548769211461005d5780638da5cb5b14610086578063ed01bf29146100b157610058565b3661005857346001600082825461004f91906103ec565b92505081905550005b600080fd5b34801561006957600080fd5b50610084600480360381019061007f9190610275565b6100dc565b005b34801561009257600080fd5b5061009b610236565b6040516100a8919061033c565b60405180910390f35b3480156100bd57600080fd5b506100c661025a565b6040516100d39190610397565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016190610357565b60405180910390fd5b478111156101ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a490610377565b60405180910390fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156101f8573d6000803e3d6000fd5b507f4d5cad599e80b97037bd6cd2da9cd361fc74837cdb6ec7aa1cea6f81a8273282824760405161022a9291906103b2565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008135905061026f816104bf565b92915050565b60006020828403121561028757600080fd5b600061029584828501610260565b91505092915050565b6102a78161046c565b82525050565b60006102ba6015836103db565b91507f596f7520617265206e6f7420746865206f776e657200000000000000000000006000830152602082019050919050565b60006102fa601e836103db565b91507f496e73756666696369656e742066756e647320696e20636f6e747261637400006000830152602082019050919050565b61033681610462565b82525050565b6000602082019050610351600083018461029e565b92915050565b60006020820190508181036000830152610370816102ad565b9050919050565b60006020820190508181036000830152610390816102ed565b9050919050565b60006020820190506103ac600083018461032d565b92915050565b60006040820190506103c7600083018561032d565b6103d4602083018461032d565b9392505050565b600082825260208201905092915050565b60006103f782610462565b915061040283610462565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561043757610436610490565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104778261047e565b9050919050565b600061048982610442565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6104c881610462565b81146104d357600080fd5b5056fea2646970667358221220b7598efaa076d51f111bed8624cc7a60365eec858e5c23543832bfa5c9d87e6064736f6c63430008000033a26469706673582212201c2d26dd9126e946a029599643291f1b397f7e81a0f6e1c824779f1c7087845a64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636310a4b91461003b578063704319c914610057575b600080fd5b610055600480360381019061005091906101f0565b610061565b005b61005f610147565b005b4782111561006e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156100b4573d6000803e3d6000fd5b50816000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461010391906102c7565b925050819055507f9432388ce97f7a9c32c9f59b80e8f02109760f1f70d7ac8380a7cfc50dce571a818360405161013b929190610283565b60405180910390a15050565b600030604051610156906101b9565b61016091906102ac565b604051809103906000f08015801561017c573d6000803e3d6000fd5b5090507f4761a9db7d11eeb66b70d289d12c6dfff48a69c7d31929640997afec7ab3ca80816040516101ae9190610268565b60405180910390a150565b61062c8061042383390190565b6000813590506101d5816103f4565b92915050565b6000813590506101ea8161040b565b92915050565b6000806040838503121561020357600080fd5b6000610211858286016101db565b9250506020610222858286016101c6565b9150509250929050565b6102358161036b565b82525050565b6102448161031d565b82525050565b6102538161037d565b82525050565b61026281610361565b82525050565b600060208201905061027d600083018461023b565b92915050565b6000604082019050610298600083018561022c565b6102a56020830184610259565b9392505050565b60006020820190506102c1600083018461024a565b92915050565b60006102d282610361565b91506102dd83610361565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610312576103116103c5565b5b828201905092915050565b600061032882610341565b9050919050565b600061033a82610341565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610376826103a1565b9050919050565b60006103888261038f565b9050919050565b600061039a82610341565b9050919050565b60006103ac826103b3565b9050919050565b60006103be82610341565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6103fd8161032f565b811461040857600080fd5b50565b61041481610361565b811461041f57600080fd5b5056fe608060405234801561001057600080fd5b5060405161062c38038061062c8339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b61050c806101206000396000f3fe6080604052600436106100385760003560e01c8063548769211461005d5780638da5cb5b14610086578063ed01bf29146100b157610058565b3661005857346001600082825461004f91906103ec565b92505081905550005b600080fd5b34801561006957600080fd5b50610084600480360381019061007f9190610275565b6100dc565b005b34801561009257600080fd5b5061009b610236565b6040516100a8919061033c565b60405180910390f35b3480156100bd57600080fd5b506100c661025a565b6040516100d39190610397565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016190610357565b60405180910390fd5b478111156101ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a490610377565b60405180910390fd5b60003390508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156101f8573d6000803e3d6000fd5b507f4d5cad599e80b97037bd6cd2da9cd361fc74837cdb6ec7aa1cea6f81a8273282824760405161022a9291906103b2565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008135905061026f816104bf565b92915050565b60006020828403121561028757600080fd5b600061029584828501610260565b91505092915050565b6102a78161046c565b82525050565b60006102ba6015836103db565b91507f596f7520617265206e6f7420746865206f776e657200000000000000000000006000830152602082019050919050565b60006102fa601e836103db565b91507f496e73756666696369656e742066756e647320696e20636f6e747261637400006000830152602082019050919050565b61033681610462565b82525050565b6000602082019050610351600083018461029e565b92915050565b60006020820190508181036000830152610370816102ad565b9050919050565b60006020820190508181036000830152610390816102ed565b9050919050565b60006020820190506103ac600083018461032d565b92915050565b60006040820190506103c7600083018561032d565b6103d4602083018461032d565b9392505050565b600082825260208201905092915050565b60006103f782610462565b915061040283610462565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561043757610436610490565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104778261047e565b9050919050565b600061048982610442565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6104c881610462565b81146104d357600080fd5b5056fea2646970667358221220b7598efaa076d51f111bed8624cc7a60365eec858e5c23543832bfa5c9d87e6064736f6c63430008000033a26469706673582212201c2d26dd9126e946a029599643291f1b397f7e81a0f6e1c824779f1c7087845a64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4044:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:95:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "86:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "150:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "115:34:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "115:41:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "115:41:2"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:2",
                "type": ""
              }
            ],
            "src": "7:155:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "220:87:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "230:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "252:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "239:12:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "239:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "230:5:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "295:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "268:26:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "268:33:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "268:33:2"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "198:6:2",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "206:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "214:5:2",
                "type": ""
              }
            ],
            "src": "168:139:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "404:332:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "450:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "459:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "462:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "452:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "452:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "452:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "425:7:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "434:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "421:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "421:23:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "446:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "417:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "417:32:2"
                  },
                  "nodeType": "YulIf",
                  "src": "414:2:2"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "476:117:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "491:15:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "505:1:2",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "495:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "520:63:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "555:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "566:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "551:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "551:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "575:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "530:20:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:53:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "520:6:2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "603:126:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "618:16:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "622:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "648:71:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "691:9:2"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "702:6:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "687:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "687:22:2"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "711:7:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "658:28:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "658:61:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "648:6:2"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "366:9:2",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "377:7:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "389:6:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "397:6:2",
                "type": ""
              }
            ],
            "src": "313:423:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "815:74:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "832:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "876:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_address_payable_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "837:38:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "837:45:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "825:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "825:58:2"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "803:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "810:3:2",
                "type": ""
              }
            ],
            "src": "742:147:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "960:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "977:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1000:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "982:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "982:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "970:37:2"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "948:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "955:3:2",
                "type": ""
              }
            ],
            "src": "895:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1101:83:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1118:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1171:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Contractor_$72_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1123:47:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1123:54:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1111:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:67:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1111:67:2"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Contractor_$72_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1089:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1096:3:2",
                "type": ""
              }
            ],
            "src": "1019:165:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1255:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1272:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1295:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1277:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1277:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1265:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1265:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1243:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1250:3:2",
                "type": ""
              }
            ],
            "src": "1190:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1412:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1422:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1434:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1445:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1430:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1422:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1502:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1515:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1526:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1511:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1511:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1458:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1458:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1384:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1396:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1407:4:2",
                "type": ""
              }
            ],
            "src": "1314:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:214:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1686:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1698:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1709:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1694:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1694:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1686:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1774:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1787:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1798:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1783:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1722:51:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:79:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1722:79:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1855:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1868:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1879:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1864:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:18:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1811:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1811:72:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1811:72:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1640:9:2",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1652:6:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1660:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1671:4:2",
                "type": ""
              }
            ],
            "src": "1542:348:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2011:141:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2021:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2033:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2044:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2029:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2021:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2118:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2131:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2142:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2127:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2127:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Contractor_$72_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2057:60:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2057:88:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Contractor_$72__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1983:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1995:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2006:4:2",
                "type": ""
              }
            ],
            "src": "1896:256:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2202:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2212:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2235:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2217:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2217:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2212:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2246:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2269:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2251:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2251:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2246:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2409:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2411:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2411:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2411:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2330:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2337:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2405:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2333:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2333:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2327:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "2324:2:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2441:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2452:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2455:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2448:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2448:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2441:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2189:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2192:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2198:3:2",
                "type": ""
              }
            ],
            "src": "2158:305:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2514:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2524:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2553:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2535:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2535:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2524:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2496:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2506:7:2",
                "type": ""
              }
            ],
            "src": "2469:96:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2624:51:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2634:35:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2663:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2645:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2645:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2634:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2606:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2616:7:2",
                "type": ""
              }
            ],
            "src": "2571:104:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2726:81:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2736:65:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2751:5:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2758:42:2",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2747:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2747:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2736:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2708:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2718:7:2",
                "type": ""
              }
            ],
            "src": "2681:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2858:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2868:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2879:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2868:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2840:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2850:7:2",
                "type": ""
              }
            ],
            "src": "2813:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2964:66:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2974:50:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3018:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2987:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:37:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2974:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_address_payable_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2944:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2954:9:2",
                "type": ""
              }
            ],
            "src": "2896:134:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3113:83:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3123:67:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3184:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Contractor_$72_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3136:47:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:54:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3123:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Contractor_$72_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3093:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3103:9:2",
                "type": ""
              }
            ],
            "src": "3036:160:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3279:53:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3289:37:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3320:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3302:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3302:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3289:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Contractor_$72_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3259:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3269:9:2",
                "type": ""
              }
            ],
            "src": "3202:130:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3398:66:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3408:50:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3452:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3421:30:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3421:37:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3408:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3378:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3388:9:2",
                "type": ""
              }
            ],
            "src": "3338:126:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3530:53:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3540:37:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3571:5:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3553:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:24:2"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3540:9:2"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3510:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3520:9:2",
                "type": ""
              }
            ],
            "src": "3470:113:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3617:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3634:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3637:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3627:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3627:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3627:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3731:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3734:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3724:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3724:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3724:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3755:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3758:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3748:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3748:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3748:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3589:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3826:87:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3891:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3900:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3903:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3893:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3893:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3893:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3849:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3882:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "3856:25:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3856:32:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3846:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3846:43:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3839:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:51:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3836:2:2"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3819:5:2",
                "type": ""
              }
            ],
            "src": "3775:138:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3962:79:2",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4019:16:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4028:1:2",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4031:1:2",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4021:6:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4021:12:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4021:12:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3985:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4010:5:2"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3992:17:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3992:24:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3982:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3982:35:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3975:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3975:43:2"
                  },
                  "nodeType": "YulIf",
                  "src": "3972:2:2"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3955:5:2",
                "type": ""
              }
            ],
            "src": "3919:122:2"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Contractor_$72_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Contractor_$72_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Contractor_$72__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Contractor_$72_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_Contractor_$72_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Contractor_$72_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Contractor_$72_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "85:518:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "85:518:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;249:112;;;:::i;:::-;;367:234;461:21;453:6;:29;;445:38;;;;;;493:7;:16;;:24;510:6;493:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:6;527:5;:14;533:7;527:14;;;;;;;;;;;;;;;;:22;;;;;;;:::i;:::-;;;;;;;;564:30;578:7;587:6;564:30;;;;;;;:::i;:::-;;;;;;;;367:234;;:::o;249:112::-;290:6;308:4;299:14;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;290:23;;328:26;351:1;328:26;;;;;;:::i;:::-;;;;;;;;249:112;:::o;-1:-1:-1:-;;;;;;;;:::o;7:155:2:-;;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;67:95;;;;:::o;168:139::-;;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;220:87;;;;:::o;313:423::-;;;446:2;434:9;425:7;421:23;417:32;414:2;;;462:1;459;452:12;414:2;505:1;530:53;575:7;566:6;555:9;551:22;530:53;:::i;:::-;520:63;;476:117;632:2;658:61;711:7;702:6;691:9;687:22;658:61;:::i;:::-;648:71;;603:126;404:332;;;;;:::o;742:147::-;837:45;876:5;837:45;:::i;:::-;832:3;825:58;815:74;;:::o;895:118::-;982:24;1000:5;982:24;:::i;:::-;977:3;970:37;960:53;;:::o;1019:165::-;1123:54;1171:5;1123:54;:::i;:::-;1118:3;1111:67;1101:83;;:::o;1190:118::-;1277:24;1295:5;1277:24;:::i;:::-;1272:3;1265:37;1255:53;;:::o;1314:222::-;;1445:2;1434:9;1430:18;1422:26;;1458:71;1526:1;1515:9;1511:17;1502:6;1458:71;:::i;:::-;1412:124;;;;:::o;1542:348::-;;1709:2;1698:9;1694:18;1686:26;;1722:79;1798:1;1787:9;1783:17;1774:6;1722:79;:::i;:::-;1811:72;1879:2;1868:9;1864:18;1855:6;1811:72;:::i;:::-;1676:214;;;;;:::o;1896:256::-;;2044:2;2033:9;2029:18;2021:26;;2057:88;2142:1;2131:9;2127:17;2118:6;2057:88;:::i;:::-;2011:141;;;;:::o;2158:305::-;;2217:20;2235:1;2217:20;:::i;:::-;2212:25;;2251:20;2269:1;2251:20;:::i;:::-;2246:25;;2405:1;2337:66;2333:74;2330:1;2327:81;2324:2;;;2411:18;;:::i;:::-;2324:2;2455:1;2452;2448:9;2441:16;;2202:261;;;;:::o;2469:96::-;;2535:24;2553:5;2535:24;:::i;:::-;2524:35;;2514:51;;;:::o;2571:104::-;;2645:24;2663:5;2645:24;:::i;:::-;2634:35;;2624:51;;;:::o;2681:126::-;;2758:42;2751:5;2747:54;2736:65;;2726:81;;;:::o;2813:77::-;;2879:5;2868:16;;2858:32;;;:::o;2896:134::-;;2987:37;3018:5;2987:37;:::i;:::-;2974:50;;2964:66;;;:::o;3036:160::-;;3136:54;3184:5;3136:54;:::i;:::-;3123:67;;3113:83;;;:::o;3202:130::-;;3302:24;3320:5;3302:24;:::i;:::-;3289:37;;3279:53;;;:::o;3338:126::-;;3421:37;3452:5;3421:37;:::i;:::-;3408:50;;3398:66;;;:::o;3470:113::-;;3553:24;3571:5;3553:24;:::i;:::-;3540:37;;3530:53;;;:::o;3589:180::-;3637:77;3634:1;3627:88;3734:4;3731:1;3724:15;3758:4;3755:1;3748:15;3775:138;3856:32;3882:5;3856:32;:::i;:::-;3849:5;3846:43;3836:2;;3903:1;3900;3893:12;3836:2;3826:87;:::o;3919:122::-;3992:24;4010:5;3992:24;:::i;:::-;3985:5;3982:35;3972:2;;4031:1;4028;4021:12;3972:2;3962:79;:::o",
  "source": "//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"./Work.sol\";\n\ncontract Contractor{\n\n    mapping(address=>uint) taken;\n\n    event ContractFormed(address contractAddress);\n    event SentToAccount(address _to, uint amount);\n\n    function createNewWork() public{\n        Work w = new Work(this);\n        emit ContractFormed(address(w));\n    }\n\n    function sendToAccount(uint amount, address payable account) public {\n        require(amount<=address(this).balance);\n        account.transfer(amount);\n        taken[account]+=amount;\n        emit SentToAccount(account, amount);\n    }\n}",
  "sourcePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol",
  "ast": {
    "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol",
    "exportedSymbols": {
      "Contractor": [
        72
      ],
      "Work": [
        164
      ]
    },
    "id": 73,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:0"
      },
      {
        "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Work.sol",
        "file": "./Work.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 73,
        "sourceUnit": 165,
        "src": "63:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 72,
        "linearizedBaseContracts": [
          72
        ],
        "name": "Contractor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "taken",
            "nodeType": "VariableDeclaration",
            "scope": 72,
            "src": "111:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "119:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "111:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "128:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 10,
            "name": "ContractFormed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "167:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "166:25:0"
            },
            "src": "146:46:0"
          },
          {
            "anonymous": false,
            "id": 16,
            "name": "SentToAccount",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "217:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "230:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "230:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "216:26:0"
            },
            "src": "197:46:0"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "280:81:0",
              "statements": [
                {
                  "assignments": [
                    21
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "w",
                      "nodeType": "VariableDeclaration",
                      "scope": 35,
                      "src": "290:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Work_$164",
                        "typeString": "contract Work"
                      },
                      "typeName": {
                        "id": 20,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 19,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 164,
                          "src": "290:4:0"
                        },
                        "referencedDeclaration": 164,
                        "src": "290:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$164",
                          "typeString": "contract Work"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "308:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Contractor_$72",
                          "typeString": "contract Contractor"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Contractor_$72",
                          "typeString": "contract Contractor"
                        }
                      ],
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "299:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Contractor_$72_$returns$_t_contract$_Work_$164_$",
                        "typeString": "function (contract Contractor) returns (contract Work)"
                      },
                      "typeName": {
                        "id": 23,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 164,
                          "src": "303:4:0"
                        },
                        "referencedDeclaration": 164,
                        "src": "303:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$164",
                          "typeString": "contract Work"
                        }
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "299:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Work_$164",
                      "typeString": "contract Work"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "290:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31,
                            "name": "w",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "351:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Work_$164",
                              "typeString": "contract Work"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Work_$164",
                              "typeString": "contract Work"
                            }
                          ],
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "343:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "343:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "343:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28,
                      "name": "ContractFormed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "328:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "EmitStatement",
                  "src": "323:31:0"
                }
              ]
            },
            "functionSelector": "704319c9",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:0"
            },
            "scope": 72,
            "src": "249:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "435:166:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "453:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 47,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "469:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Contractor_$72",
                                  "typeString": "contract Contractor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Contractor_$72",
                                  "typeString": "contract Contractor"
                                }
                              ],
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "461:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "461:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "461:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "461:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "453:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "445:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "445:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "510:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "493:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "493:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "493:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "493:24:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59,
                        "name": "taken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "527:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "id": 60,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "533:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "527:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "543:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "527:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "527:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "578:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 67,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "587:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65,
                      "name": "SentToAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "564:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "EmitStatement",
                  "src": "559:35:0"
                }
              ]
            },
            "functionSelector": "6310a4b9",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendToAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "390:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "403:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "389:38:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:0"
            },
            "scope": 72,
            "src": "367:234:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 73,
        "src": "85:518:0"
      }
    ],
    "src": "38:565:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Contractor.sol",
    "exportedSymbols": {
      "Contractor": [
        72
      ],
      "Work": [
        164
      ]
    },
    "id": 73,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "38:23:0"
      },
      {
        "absolutePath": "/Users/agrim/Desktop/Coding work/BlockchainDev/TaxChain/contracts/Work.sol",
        "file": "./Work.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 73,
        "sourceUnit": 165,
        "src": "63:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          164
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 72,
        "linearizedBaseContracts": [
          72
        ],
        "name": "Contractor",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "taken",
            "nodeType": "VariableDeclaration",
            "scope": 72,
            "src": "111:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5,
              "keyType": {
                "id": 3,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "119:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "111:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "128:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 10,
            "name": "ContractFormed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "167:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "167:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "166:25:0"
            },
            "src": "146:46:0"
          },
          {
            "anonymous": false,
            "id": 16,
            "name": "SentToAccount",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "217:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "217:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 16,
                  "src": "230:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "230:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "216:26:0"
            },
            "src": "197:46:0"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "280:81:0",
              "statements": [
                {
                  "assignments": [
                    21
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "w",
                      "nodeType": "VariableDeclaration",
                      "scope": 35,
                      "src": "290:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Work_$164",
                        "typeString": "contract Work"
                      },
                      "typeName": {
                        "id": 20,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 19,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 164,
                          "src": "290:4:0"
                        },
                        "referencedDeclaration": 164,
                        "src": "290:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$164",
                          "typeString": "contract Work"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 27,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "308:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Contractor_$72",
                          "typeString": "contract Contractor"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Contractor_$72",
                          "typeString": "contract Contractor"
                        }
                      ],
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "299:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Contractor_$72_$returns$_t_contract$_Work_$164_$",
                        "typeString": "function (contract Contractor) returns (contract Work)"
                      },
                      "typeName": {
                        "id": 23,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22,
                          "name": "Work",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 164,
                          "src": "303:4:0"
                        },
                        "referencedDeclaration": 164,
                        "src": "303:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Work_$164",
                          "typeString": "contract Work"
                        }
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "299:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Work_$164",
                      "typeString": "contract Work"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "290:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31,
                            "name": "w",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "351:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Work_$164",
                              "typeString": "contract Work"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Work_$164",
                              "typeString": "contract Work"
                            }
                          ],
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "343:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "343:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "343:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28,
                      "name": "ContractFormed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "328:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "328:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34,
                  "nodeType": "EmitStatement",
                  "src": "323:31:0"
                }
              ]
            },
            "functionSelector": "704319c9",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createNewWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "280:0:0"
            },
            "scope": 72,
            "src": "249:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "435:166:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "453:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 47,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "469:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Contractor_$72",
                                  "typeString": "contract Contractor"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Contractor_$72",
                                  "typeString": "contract Contractor"
                                }
                              ],
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "461:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 45,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "461:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "461:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "461:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "453:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 43,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "445:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 51,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "445:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 52,
                  "nodeType": "ExpressionStatement",
                  "src": "445:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "510:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "493:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 55,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "493:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "493:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "493:24:0"
                },
                {
                  "expression": {
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59,
                        "name": "taken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "527:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "id": 60,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "533:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "527:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 62,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "543:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "527:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 64,
                  "nodeType": "ExpressionStatement",
                  "src": "527:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "578:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 67,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "587:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 65,
                      "name": "SentToAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "564:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "564:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "EmitStatement",
                  "src": "559:35:0"
                }
              ]
            },
            "functionSelector": "6310a4b9",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendToAccount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "390:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "390:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "403:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "389:38:0"
            },
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:0"
            },
            "scope": 72,
            "src": "367:234:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 73,
        "src": "85:518:0"
      }
    ],
    "src": "38:565:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0e098be4B0b3BE6734640B689b25727c15aF49B0",
      "transactionHash": "0x08bbe3ee4437939daae9119ff170d0b43de86f4476c2e64d4c325ae23357b63e"
    }
  },
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-05-06T16:35:24.037Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}